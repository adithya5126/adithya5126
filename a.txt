hosttype=filer-cmode
default_ip=10.333.12.14
username=admin
password=pswrd1!
owner=filer_owner@netapp.com
----------------------------------
"""
[14:25] Shanmugam, Vinoth (Guest)
    aa.txt
hosttype=filer-cmode(value)
default_ip=10.333.12.14
username=admin
password=pswrd1!
owner=filer_owner@netapp.com

bb.txt
hosttype=rhel-8.5
default_ip=10.11.12.13
username=root
password=pswrd
owner=client_owner@netapp.com
Open the files:
(#1) print FILER if the hosttype has string:filer & HOST if the hostype has rhel
(#2) read the default_ip and validate whether it is a valid IP or not and store the IO into a variable
(#3) read user_name & password and try connecting to the IO using username & password using SSH
(#4) execute 'date' command on both filer and client and print the o/p on the console
(#5) read the e-mail and trim owner name form the e-mail and print for filer and client
"""
------------------
import paramiko
class copyingafileremotetohost:
    def __init__(self):
        print("i am connecting to host")
    def copyingfile1(self,remotepath,hostpath):
        self.remotepath=remotepath
        self.hostpath=hostpath
        try:
            ip=input("enter your ")
            ssh=paramiko.SSHClient()
            ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
            ssh.connect(hostname=ip,username="adithya",password="123")
            sfpt=ssh.open_sftp()
            sfpt.get(remotepath,hostpath)
            sfpt.close()
            ssh.close()
        except Exception as error:
            print(error)
class copyingafilehosttoremote:
    def __init__(self):
        print("i am connecting to host")
    def copyingfile2(self,remotepath,hostpath):
        self.remotepath=remotepath
        self.hostpath=hostpath
        try:
            ssh=paramiko.SSHClient()
            ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
            ssh.connect(hostname="1.1.1.1",username="adithya",password="123")
            sfpt=ssh.open_sftp()
            sfpt.put(hostpath,remotepath)
            sfpt.close()
            ssh.close()
        except Exception as error:
            print(error)
obj1=copyingafileremotetohost()
obj1.copyingfile1(r"c://user",r"c://user/drive")
obj2=copyingafilehosttoremote()
obj1.copyingfile2("c://user/drive",r"c://user")    

______________________________________________________
var1 = {
    'key1' : {'key2' : [[1,2],33,44]},
    'key3' : {'key4' : [(4,5),11,22]}
}
#print(var1["key1"]["key2"][1])
var1["key1"]["key2"][0]=[1,2,3]
#print(var1)
    
k=list((var1["key3"]["key4"][0]))
k.append(6)
var1["key3"]["key4"][0]=tuple(k)
print(var1)
_____________________________________________
import re
with open(r"C:\Users\rahul\OneDrive\Desktop\testing\a.txt","r") as e:
    k=e.readlines()
    d1={}
    for i in k:
      spliting=i.split("=")
      d1[spliting[0]]=spliting[-1]
    print(d1)
    if d1["hosttype"]=="filer-cmode":
        print("i am processing the filermode")
        pattern="((([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|2[5][0-5])[.]){3})[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|2[5][0-5]"
        res=re.fullmatch(pattern,d1["default_ip"])
        if res!=None:
            print("the given ip address is not valid")
        else:
            print("ip adress is valid only")
            
























